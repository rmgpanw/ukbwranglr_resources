disease_categories <- unique(df_icd10_with_modifiers$category)
df_icd10_with_modifiers <- disease_categories %>%
purrr::set_names() %>%
purrr::map(.f = ~ {
# get base_codes for single disease category
base_codes_to_expand <- df_icd10_with_modifiers %>%
dplyr::filter(category == .x) %>%
.$code
# get disease for disease category
DISEASE <- df_icd10_with_modifiers %>%
dplyr::filter(category == .x) %>%
.$disease %>%
unique() # should be unique
# get full set of codes + modifiers for these 'base_codes'
expanded_codes <- icd10_with_modifiers_all %>%
dplyr::filter(base_code %in% base_codes_to_expand) %>%
.$ICD10_CODE
# get descriptions
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE) %>%
dplyr::mutate(code_type = "opcs4",
phenotype_source = "caliber") %>%
dplyr::select(
disease = DISEASE,
description,
category = .x,
code_type,
code,
phenotype_source = "caliber"
)
}) %>%
dplyr::bind_rows()
df_icd10_with_modifiers <- disease_categories %>%
purrr::set_names() %>%
purrr::map(.f = ~ {
# get base_codes for single disease category
base_codes_to_expand <- df_icd10_with_modifiers %>%
dplyr::filter(category == .x) %>%
.$code
# get disease for disease category
DISEASE <- df_icd10_with_modifiers %>%
dplyr::filter(category == .x) %>%
.$disease %>%
unique() # should be unique
# get full set of codes + modifiers for these 'base_codes'
expanded_codes <- icd10_with_modifiers_all %>%
dplyr::filter(base_code %in% base_codes_to_expand) %>%
.$ICD10_CODE
# get descriptions
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE)
})
disease_categories
df_icd10_with_modifiers <- df %>%
dplyr::filter(code %in% icd10_with_modifiers_all$ICD10_CODE)
tar_make(callr_function = NULL)
debugonce(append_icd10_ALT_CODEs_with_modifiers)
df_backup <- df
disease_categories
df_icd10_with_modifiers
icd10_with_modifiers_all %>% dplyr::filter(ICD10_CODE %in% df_icd10_with_modifiers$code)
df_icd10_with_modifiers
df_icd10_with_modifiers %>%
dplyr::filter(category == disease_categories[1]) %>%
.$code
base_codes_to_expand <- df_icd10_with_modifiers %>%
dplyr::filter(category == disease_categories[1]) %>%
.$code
icd10_with_modifiers_all %>%
dplyr::filter(base_code %in% base_codes_to_expand) %>%
.$ICD10_CODE
View(icd10_with_modifiers_all)
icd10_with_modifiers_all %>%
dplyr::filter(ICD10_CODE %in% base_codes_to_expand) %>%
.$ICD10_CODE
View(df_icd10_with_modifiers)
View(df_backup)
base_codes_to_expand <- df_icd10_with_modifiers %>%
dplyr::filter(category == disease_categories["Diabetes"]) %>%
.$code
base_codes_to_expand <- df_icd10_with_modifiers %>%
dplyr::filter(category == "Diabetes") %>%
.$code
df_icd10_with_modifiers <- df_backup %>%
dplyr::filter(code %in% icd10_with_modifiers_all$base_code)
View(df_icd10_with_modifiers)
df <- df_backup %>%
dplyr::filter(!code %in% icd10_with_modifiers_all$base_code)
disease_categories <- unique(df_icd10_with_modifiers$category)
disease_categories
base_codes_to_expand <- df_icd10_with_modifiers %>%
dplyr::filter(category == "Insulin dependent diabetes (3)") %>%
.$code
DISEASE <- "Insulin dependent diabetes (3)"
expanded_codes <- icd10_with_modifiers_all %>%
dplyr::filter(base_code %in% base_codes_to_expand) %>%
.$ICD10_CODE
expanded_codes
# add in base codes
expanded_codes <- c(expanded_codes, base_codes_to_expand)
expanded_codes
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE) %>%
dplyr::mutate(code_type = "opcs4",
phenotype_source = "caliber") %>%
dplyr::select(
disease = DISEASE,
description,
category = .x,
code_type,
code,
phenotype_source = "caliber"
)
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE) %>%
dplyr::mutate(code_type = "icd10",
phenotype_source = "caliber",
category = .x) %>%
dplyr::select(
disease = DISEASE,
description,
category,
code_type,
code,
phenotype_source = "caliber"
)
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE) %>%
dplyr::mutate(code_type = "icd10",
phenotype_source = "caliber",
category = "Insulin dependent diabetes (3)") %>%
dplyr::select(
disease = DISEASE,
description,
category,
code_type,
code,
phenotype_source = "caliber"
)
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE)
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE) %>%
dplyr::mutate(code_type = "icd10",
phenotype_source = "caliber",
category = "Insulin dependent diabetes (3)")
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE) %>%
dplyr::mutate(code_type = "icd10",
phenotype_source = "caliber",
category = "Insulin dependent diabetes (3)") %>% dplyr::select(
disease = DISEASE,
description,
category,
code_type,
code,
phenotype_source = "caliber"
)
test <- ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE) %>%
dplyr::mutate(code_type = "icd10",
phenotype_source = "caliber",
category = "Insulin dependent diabetes (3)")
test %>% dplyr::select(category)
names(test)
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE) %>%
dplyr::mutate(
disease = DISEASE,
code_type = "icd10",
phenotype_source = "caliber",
category = .x) %>%
dplyr::select(
disease,
description,
category,
code_type,
code,
phenotype_source
)
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE) %>%
dplyr::mutate(
disease = DISEASE,
code_type = "icd10",
phenotype_source = "caliber",
category = "Insulin dependent diabetes (3)") %>%
dplyr::select(
disease,
description,
category,
code_type,
code,
phenotype_source
)
df_icd10_with_modifiers <- disease_categories %>%
purrr::set_names() %>%
purrr::map(.f = ~ {
# get base_codes for single disease category
base_codes_to_expand <- df_icd10_with_modifiers %>%
dplyr::filter(category == .x) %>%
.$code
# get disease for disease category
DISEASE <- df_icd10_with_modifiers %>%
dplyr::filter(category == .x) %>%
.$disease %>%
unique() # should be unique
# get full set of codes + modifiers for these 'base_codes'
expanded_codes <- icd10_with_modifiers_all %>%
dplyr::filter(base_code %in% base_codes_to_expand) %>%
.$ICD10_CODE
# add in base codes
expanded_codes <- c(expanded_codes, base_codes_to_expand)
# get descriptions
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE) %>%
dplyr::mutate(
disease = DISEASE,
code_type = "icd10",
phenotype_source = "caliber",
category = .x) %>%
dplyr::select(
disease,
description,
category,
code_type,
code,
phenotype_source
)
}) %>%
dplyr::bind_rows()
df
1880+ 45
View(df_icd10_with_modifiers)
?dplyr::distinct
dplyr::distinct(df_icd10_with_modifiers)
what_now <- dplyr::distinct(df_icd10_with_modifiers)
View(what_now)
View(df_icd10_with_modifiers)
df_icd10_with_modifiers <- disease_categories %>%
purrr::set_names() %>%
purrr::map(.f = ~ {
# get base_codes for single disease category
base_codes_to_expand <- df_icd10_with_modifiers %>%
dplyr::filter(category == .x) %>%
.$code
# get disease for disease category
DISEASE <- df_icd10_with_modifiers %>%
dplyr::filter(category == .x) %>%
.$disease %>%
unique() # should be unique
# get full set of codes + modifiers for these 'base_codes'
expanded_codes <- icd10_with_modifiers_all %>%
dplyr::filter(base_code %in% base_codes_to_expand) %>%
.$ICD10_CODE
# add in base codes
expanded_codes <- c(expanded_codes, base_codes_to_expand)
# get descriptions
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE) %>%
dplyr::mutate(
disease = DISEASE,
code_type = "icd10",
phenotype_source = "caliber",
category = .x) %>%
dplyr::select(
disease,
description,
category,
code_type,
code,
phenotype_source
)
})
View(df_icd10_with_modifiers)
View(df_icd10_with_modifiers[["Diagnosis of Bacterial Diseases (excl TB)"]])
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE)
View(df_icd10_with_modifiers[["Insulin dependent diabetes (3)"]])
View(df_icd10_with_modifiers[["Diagnosis of Infection of bones and joints"]])
df_icd10_with_modifiers <- df_backup %>%
dplyr::filter(code %in% icd10_with_modifiers_all$base_code)
disease_categories <- unique(df_icd10_with_modifiers$category)
df_icd10_with_modifiers <- disease_categories %>%
purrr::set_names() %>%
purrr::map(.f = ~ {
# get base_codes for single disease category
base_codes_to_expand <- df_icd10_with_modifiers %>%
dplyr::filter(category == .x) %>%
.$code
# get disease for disease category
DISEASE <- df_icd10_with_modifiers %>%
dplyr::filter(category == .x) %>%
.$disease %>%
unique() # should be unique
# get full set of codes + modifiers for these 'base_codes'
expanded_codes <- icd10_with_modifiers_all %>%
dplyr::filter(base_code %in% base_codes_to_expand) %>%
.$ICD10_CODE
# add in base codes
expanded_codes <- c(expanded_codes, base_codes_to_expand)
# get descriptions
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE) %>%
dplyr::mutate(
disease = DISEASE,
code_type = "icd10",
phenotype_source = "caliber",
category = .x) %>%
dplyr::select(
disease,
description,
category,
code_type,
code,
phenotype_source
)
}) %>%
dplyr::bind_rows() %>%
dplyr::distinct()
# now re-join to original df
result <- dplyr::bind_rows(df, df_icd10_with_modifiers)
tar_make(callr_function = NULL)
debugonce(append_icd10_ALT_CODEs_with_modifiers)
df_backup <- df
df_icd10_with_modifiers <- disease_categories %>%
purrr::set_names() %>%
purrr::map(.f = ~ {
# get base_codes for single disease category
base_codes_to_expand <- df_icd10_with_modifiers %>%
dplyr::filter(category == .x) %>%
.$code
# get disease for disease category
DISEASE <- df_icd10_with_modifiers %>%
dplyr::filter(category == .x) %>%
.$disease %>%
unique() # should be unique
# get full set of codes + modifiers for these 'base_codes'
expanded_codes <- icd10_with_modifiers_all %>%
dplyr::filter(base_code %in% base_codes_to_expand) %>%
.$ICD10_CODE
# add in base codes
expanded_codes <- c(expanded_codes, base_codes_to_expand)
# get descriptions
ukbwranglr::lookup_codes(codes = expanded_codes,
code_type = "icd10",
ukb_code_mappings = ukb_code_mappings,
preferred_description_only = TRUE,
standardise_output = TRUE,
quiet = TRUE) %>%
dplyr::mutate(
disease = DISEASE,
code_type = "icd10",
phenotype_source = "caliber",
category = .x) %>%
dplyr::select(
disease,
description,
category,
code_type,
code,
phenotype_source
)
}) %>%
dplyr::bind_rows() %>%
dplyr::distinct()
result <- dplyr::bind_rows(df, df_icd10_with_modifiers)
View(result)
targets::tar_make()
library(dm)
library(RSQLite)
library(DBI)
library(tidyverse)
# connect to ukb.db
con <- DBI::dbConnect(SQLite(), "ukb.db")
ukbdb <- dm::dm_from_src(src = con,
learn_keys = FALSE)
caliber_codes <- ukbdb$caliber_codes %>%
collect()
caliber_codes_dm <- caliber_codes %>%
filter(disease == "Diabetes")
# connect to old ukb.db
con2 <- DBI::dbConnect(RSQLite::SQLite(), dbname = "/Users/alasdair/Documents/Data/UKB/AK/ukb_db/ukb.db")
ukbdb2 <- dm::dm_from_src(src = con2,
learn_keys = FALSE)
caliber_codes2 <- ukbdb2$caliber_codes %>%
collect()
caliber_codes_dm2 <- caliber_codes2 %>%
filter(disease == "Diabetes")
all_t1dm_t2dm_codes <- ukbdb2$all_t1dm_t2dm_codes %>%
collect()
caliber_codes_dm2 <- caliber_codes2 %>%
filter(disease == "Diabetes")
# missing codes
dm_codes_missing_from_caliber2 <- all_t1dm_t2dm_codes %>%
filter(!code %in% caliber_codes_dm2$code)
dm_codes_missing_from_caliber <- all_t1dm_t2dm_codes %>%
filter(!code %in% caliber_codes_dm$code)
hm <- dm_codes_missing_from_caliber %>%
filter(!code %in% dm_codes_missing_from_caliber2$code)
hm <- caliber_codes_dm %>%
filter(!code %in% caliber_codes_dm2$code)
hm2 <- caliber_codes_dm2 %>%
filter(!code %in% caliber_codes_dm$code)
# why is C10E1 disappearing?
diabetes_caliber <- read_csv("https://github.com/spiros/chronological-map-phenotypes/raw/master/primary_care/CPRD_diabetes.csv",
col_types = readr::cols(.default = "c"))
diabetes_caliber_standardised <- diabetes_caliber %>%
tidyr::pivot_longer(
cols = c("Readcode", "Medcode"),
names_to = "code_type",
values_to = "code"
) %>%
dplyr::mutate(
phenotype_source = "caliber"
) %>%
dplyr::select(
disease = Disease,
description = ReadcodeDescr,
category = Category,
code_type,
code,
phenotype_source
)
diabetes_caliber_reformatted <- reformat_caliber_read2(diabetes_caliber_standardised)
test <- diabetes_caliber_standardised %>%
# filter for only read2 codes
dplyr::filter(code_type == "Readcode") %>%
# label as 'read2' (ukbwranglr format)
dplyr::mutate(code_type = "read2") %>%
# TO DELETE - not all codes include the primary description e.g. C108.
# # filter for primary descriptions only: the last 2 characters indicate whether
# # description is the  preferred one or not
# dplyr::filter(stringr::str_detect(code, ".*00$")) %>%
#
# # remove last 2 characters
# dplyr::mutate(code = stringr::str_replace(code,
#                                           pattern = "00$",
#                                           replacement = ""))
# remove last 2 characters
dplyr::mutate(code = stringr::str_sub(code,
start = 1L,
end = -3L)) %>%
# take only one description per code
dplyr::group_by(code) %>%
dplyr::slice(1L) %>%
dplyr::ungroup()
# TODO
# E10 - has modifiers, only E10 shows up with current ukbwrnalgr function. need
# to make function to get all modifier versions with ICD10
# check whether C10E1 is present in latest ukb.db
View(dm_codes_missing_from_caliber)
